[
    {
        "id": "cd959a180dca7516",
        "type": "tab",
        "label": "Etools",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24f0d1ac404f7592",
        "type": "tab",
        "label": "IDP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c1ed5959cf663dc3",
        "type": "tab",
        "label": "FSNAU",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5fea74d190b05770",
        "type": "inject",
        "z": "cd959a180dca7516",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "5e7b73ad74562bc0"
            ]
        ]
    },
    {
        "id": "5e7b73ad74562bc0",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://datamart.unicef.io/api/latest/datamart/interventions-budget/?country_name=somalia&ordering=id&-serializer=std&page_size=500",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "senderr": false,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "c8cc74c3ce326987"
            ]
        ]
    },
    {
        "id": "c8cc74c3ce326987",
        "type": "function",
        "z": "cd959a180dca7516",
        "name": "Parse data to list",
        "func": "results = msg.payload.results;\n\n// clean data by [section][geometry]\n\nfunction extractedDate(date) {\n    const year = date.getUTCFullYear();\n    const month = (date.getUTCMonth() + 1).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n    })\n    const day = date.getUTCDate().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n    })\n    return year + '-' + month + '-' + day\n}\n\nfunction numberWithCommas(x, decimalNum = 2) {\n    let numFloat = parseFloat(x);\n    if (!isNaN(numFloat)) {\n        x = numFloat;\n    } else {\n        return x\n    }\n    if (typeof x !== 'number') {\n        return x\n    }\n    x = x.toFixed(decimalNum)\n    let number = x.split('.')[0];\n    let decimal = x.split('.')[1];\n    let string = number.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    if (decimal && parseInt(decimal)) {\n        string += '.' + decimal.replace(/[0]+$/, '');\n    }\n    return string;\n}\n\n\nfunction extractDetails(result){\n    return {\n        'reference_number': result.reference_number,\n        'partner_name': result.partner_name,\n        'title': result.title,\n        'start_date': result.start_date,\n        'end_date': result.end_date,\n        'status': result.status,\n        'budget_total': numberWithCommas(result.budget_total) +' '+ result.budget_currency,\n        'sections': result.sections\n    }\n}\n\nvar currentDate = extractedDate(new Date());\nconst cleanData = {}\nresults.forEach(result => {\n    result.locations_data.forEach(geometry => {\n        // ----------------------------------------------------\n        // this is for all section\n        const indicatorName = 'All';\n        if (!cleanData[indicatorName]) {\n            cleanData[indicatorName] = {}\n        }\n        if (!cleanData[indicatorName][geometry.pcode]) {\n            cleanData[indicatorName][geometry.pcode] = {\n                'count': 0,\n                'details': []\n            }\n        }\n        if(result.status === 'active') {\n            cleanData[indicatorName][geometry.pcode]['count'] += 1\n        }\n        cleanData[indicatorName][geometry.pcode]['details'].push(extractDetails(result))\n        \n        // ----------------------------------------------------\n        // this is for sections\n        result.sections_data.forEach(section => {\n            if (!cleanData[section.name]) {\n                cleanData[section.name] = {}\n            }\n            if (!cleanData[section.name][geometry.pcode]) {\n                cleanData[section.name][geometry.pcode] = {\n                    'count': 0,\n                    'details': []\n                }\n            }\n            if(result.status === 'active') {\n                cleanData[section.name][geometry.pcode]['count'] += 1\n            }\n            cleanData[section.name][geometry.pcode]['details'].push(extractDetails(result))\n        })\n    })\n})\nmsg.payload = cleanData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            [
                "d44da3456a357f19"
            ]
        ]
    },
    {
        "id": "d44da3456a357f19",
        "type": "function",
        "z": "cd959a180dca7516",
        "name": "Parse data to ready to be pushed",
        "func": "\n\nfunction extractedDate(date) {\n    const year = date.getUTCFullYear();\n    const month = (date.getUTCMonth() + 1).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n    })\n    const day = date.getUTCDate().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n    })\n    return year + '-' + month + '-' + day\n}\n\nvar currentDate = extractedDate(new Date());\n\nconst pushedData = []\nfor (const [key, values] of Object.entries(msg.payload)) {\n    const indicatorData = []\n    for (const [geom, data] of Object.entries(values)) {\n        indicatorData.push({\n            \"geometry_code\": geom,\n            \"date\": currentDate,\n            \"value\": data.count,\n            \"details\": data.details\n\n        })\n    }\n    pushedData.push({\n        'indicator': key,\n        'data': indicatorData\n    })\n}\nmsg.payload = pushedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 120,
        "wires": [
            [
                "a190548a47369cb9"
            ]
        ]
    },
    {
        "id": "a190548a47369cb9",
        "type": "split",
        "z": "cd959a180dca7516",
        "name": "Split Data per Indicator",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "52867c4bcf2e444e"
            ]
        ]
    },
    {
        "id": "69a95899c08a8ec9",
        "type": "switch",
        "z": "cd959a180dca7516",
        "name": "Switching by Indicator",
        "property": "indicator",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Nutrition",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Child Protection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Health",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Education",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "WASH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Emergency",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Social Policy/Social Protection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C4D/Resilience",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "All",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "37e96f4555403724"
            ],
            [
                "24fc798182d8a0e2"
            ],
            [
                "b78df9eb12ec49ae"
            ],
            [
                "2b97cc79d27011fa"
            ],
            [
                "cdc1bf441539878d"
            ],
            [
                "d36df9e8b5199287"
            ],
            [
                "1f44ae4fe54d3350"
            ],
            [
                "2e105acd8d7d6aae"
            ],
            [
                "342219cfdcfd956b"
            ]
        ]
    },
    {
        "id": "52867c4bcf2e444e",
        "type": "function",
        "z": "cd959a180dca7516",
        "name": "Update payload",
        "func": "msg.indicator = msg.payload.indicator;\nmsg.payload = msg.payload.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "69a95899c08a8ec9"
            ]
        ]
    },
    {
        "id": "37e96f4555403724",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Nutrition",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/40/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 980,
        "y": 220,
        "wires": [
            [
                "ae7693434eaf5caa"
            ]
        ]
    },
    {
        "id": "24fc798182d8a0e2",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Child Protection",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/41/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1000,
        "y": 280,
        "wires": [
            [
                "512cbac8c22f3400"
            ]
        ]
    },
    {
        "id": "b78df9eb12ec49ae",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Health",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/42/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 970,
        "y": 340,
        "wires": [
            [
                "a32226414fe451e8"
            ]
        ]
    },
    {
        "id": "2b97cc79d27011fa",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Education",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/43/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 980,
        "y": 400,
        "wires": [
            [
                "b1bba417b880ede3"
            ]
        ]
    },
    {
        "id": "cdc1bf441539878d",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "WASH",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/44/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 970,
        "y": 460,
        "wires": [
            [
                "f91b8543b44131dd"
            ]
        ]
    },
    {
        "id": "d36df9e8b5199287",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Emergency",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/45/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 990,
        "y": 520,
        "wires": [
            [
                "3b000eef633a7db2"
            ]
        ]
    },
    {
        "id": "1f44ae4fe54d3350",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "Social Policy/Social Protection",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/46/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "072d37f0e053a6b2"
            ]
        ]
    },
    {
        "id": "2e105acd8d7d6aae",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "C4D/Resilience",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/47/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "35b1225aefd5f293"
            ]
        ]
    },
    {
        "id": "ae7693434eaf5caa",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 220,
        "wires": []
    },
    {
        "id": "512cbac8c22f3400",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 280,
        "wires": []
    },
    {
        "id": "a32226414fe451e8",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "b1bba417b880ede3",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 400,
        "wires": []
    },
    {
        "id": "f91b8543b44131dd",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "3b000eef633a7db2",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 520,
        "wires": []
    },
    {
        "id": "072d37f0e053a6b2",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "35b1225aefd5f293",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 640,
        "wires": []
    },
    {
        "id": "342219cfdcfd956b",
        "type": "http request",
        "z": "cd959a180dca7516",
        "name": "All",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/48/values/batch?replace=True",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 970,
        "y": 700,
        "wires": [
            [
                "88c0a70c848ed8f7"
            ]
        ]
    },
    {
        "id": "88c0a70c848ed8f7",
        "type": "debug",
        "z": "cd959a180dca7516",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 700,
        "wires": []
    },
    {
        "id": "2b9fedc51dd61245",
        "type": "inject",
        "z": "24f0d1ac404f7592",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "1f4b4ebbc6c002e0"
            ]
        ]
    },
    {
        "id": "1f4b4ebbc6c002e0",
        "type": "http request",
        "z": "24f0d1ac404f7592",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://unhcr.github.io/dataviz-somalia-prmn/data/PRMNDataset.csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 290,
        "y": 60,
        "wires": [
            [
                "7d4ea756dd33f743"
            ]
        ]
    },
    {
        "id": "7d4ea756dd33f743",
        "type": "function",
        "z": "24f0d1ac404f7592",
        "name": "Format data",
        "func": "const districtMap = {\n    \"adan yabaal\": \"SO2102\",\n    \"afgooye\": \"SO2302\",\n    \"afmadow\": \"SO2802\",\n    \"baardheere\": \"SO2602\",\n    \"badhaadhe\": \"SO2803\",\n    \"baidoa\": \"SO2401\",\n    \"baki\": \"SO1102\",\n    \"balcad\": \"SO2103\",\n    \"banadir\": \"SO2201\",\n    \"bandarbeyla\": \"SO1602\",\n    \"baraawe\": \"SO2303\",\n    \"belet weyne\": \"SO2001\",\n    \"belet xaawo\": \"SO2603\",\n    \"berbera\": \"SO1202\",\n    \"borama\": \"SO1101\",\n    \"bossaso\": \"SO1601\",\n    \"bu'aale\": \"SO2701\",\n    \"bulo burto\": \"SO2002\",\n    \"burco\": \"SO1301\",\n    \"burtinle\": \"SO1702\",\n    \"buuhoodle\": \"SO1302\",\n    \"buur hakaba\": \"SO2402\",\n    \"cabudwaaq\": \"SO1902\",\n    \"cadaado\": \"SO1903\",\n    \"cadale\": \"SO2104\",\n    \"caluula\": \"SO1603\",\n    \"caynabo\": \"SO1402\",\n    \"ceel afweyn\": \"SO1502\",\n    \"ceel barde\": \"SO2502\",\n    \"ceel buur\": \"SO1904\",\n    \"ceel dheer\": \"SO1905\",\n    \"ceel waaq\": \"SO2604\",\n    \"ceerigaabo\": \"SO1501\",\n    \"dhuusamarreeb\": \"SO1901\",\n    \"diinSOor\": \"SO2403\",\n    \"doolow\": \"SO2605\",\n    \"eyl\": \"SO1703\",\n    \"gaalkacyo\": \"SO1801\",\n    \"galdogob\": \"SO1802\",\n    \"garbahaarey\": \"SO2601\",\n    \"garoowe\": \"SO1701\",\n    \"gebiley\": \"SO1203\",\n    \"hargeysa\": \"SO1201\",\n    \"hobyo\": \"SO1803\",\n    \"iskushuban\": \"SO1604\",\n    \"jalalaqsi\": \"SO2003\",\n    \"jamaame\": \"SO2804\",\n    \"jariiban\": \"SO1804\",\n    \"jilib\": \"SO2702\",\n    \"jowhar\": \"SO2101\",\n    \"kismayo\": \"SO2801\",\n    \"kurtunwaarey\": \"SO2304\",\n    \"laas caanood\": \"SO1401\",\n    \"laasqoray\": \"SO1503\",\n    \"lughaye\": \"SO1103\",\n    \"luuq\": \"SO2606\",\n    \"marka\": \"SO2301\",\n    \"owdweyne\": \"SO1303\",\n    \"qandala\": \"SO1605\",\n    \"qansax dheere\": \"SO2404\",\n    \"qardho\": \"SO1606\",\n    \"qoryooley\": \"SO2305\",\n    \"rab dhuure\": \"SO2505\",\n    \"saakow\": \"SO2703\",\n    \"sablaale\": \"SO2306\",\n    \"sheikh\": \"SO1304\",\n    \"taleex\": \"SO1403\",\n    \"tayeeglow\": \"SO2503\",\n    \"waajid\": \"SO2504\",\n    \"wanla weyn\": \"SO2307\",\n    \"xarardheere\": \"SO1805\",\n    \"xudun\": \"SO1404\",\n    \"xudur\": \"SO2501\",\n    \"zeylac\": \"SO1104\",\n}\n\n\nconst data = [];\nmsg.payload.split('\\n').forEach(row => data.push(row.split(',')));\n\n// Make everything in json\n// Key is indicator key\nconst indicatorData = {};\nconst header = data[0];\nconst arrivalIdx = header.indexOf('cdistrict');\nconst departureIdx = header.indexOf('pdistrict');\nconst reasonIdx = header.indexOf('creason');\nconst needIdx = header.indexOf('cneed');\nconst dateIdx = header.indexOf('monthend');\nconst peopleIdx = header.indexOf('tpeople');\n\n\ndata.forEach((row, rowIdx) => {\n    if (rowIdx > 0) {\n\n        if (!row[arrivalIdx] || !row[departureIdx] || !row[reasonIdx] || !row[needIdx] || !row[dateIdx] || !row[peopleIdx]) {\n            return\n        }\n        const dateParts = row[dateIdx].split('/');\n        const arrivalDistrict = districtMap[row[arrivalIdx].toLowerCase()];\n        const departureDistrict = districtMap[row[departureIdx].toLowerCase()];\n        const reason = 'Reason : ' + row[reasonIdx];\n        const need = 'Needs : ' + row[needIdx];\n        if(parseInt(dateParts[2]) !== (new Date()).getFullYear()){\n            return \n        }\n        const people = parseInt(row[peopleIdx]);\n\n        if (!arrivalDistrict || !departureDistrict) {\n            return\n        }\n\n        // split between arrival and departure\n        // Arrival\n        const groupData = {\n            'Arrival By Year': {\n                'district': arrivalDistrict,\n                'date': dateParts[2] + '-12-31'\n            },\n            'Departure By Year': {\n                'district': departureDistrict,\n                'date': dateParts[2] + '-12-31'\n            },\n            'Arrival': {\n                'district': arrivalDistrict,\n                'date': dateParts[2] + '-' + dateParts[1] + '-' + dateParts[0]\n            },\n            'Departure': {\n                'district': departureDistrict,\n                'date': dateParts[2] + '-' + dateParts[1] + '-' + dateParts[0]\n            }\n        }\n        for (const [key, value] of Object.entries(groupData)) {\n            const district = value['district'];\n            const date = value['date'];\n            if (!indicatorData[key]) {\n                indicatorData[key] = {}\n            }\n            if (!indicatorData[key][district]) {\n                indicatorData[key][district] = {}\n            }\n            if (!indicatorData[key][district][date]) {\n                indicatorData[key][district][date] = {\n                    \"geometry_code\": district,\n                    \"date\": date,\n                    \"value\": 0,\n                    \"detailsInJson\": {\n                        'reason': {},\n                        'needs': {},\n                    }\n                }\n            }\n            indicatorData[key][district][date]['value'] += people;\n            if (!indicatorData[key][district][date]['detailsInJson']['reason'][reason]) {\n                indicatorData[key][district][date]['detailsInJson']['reason'][reason] = 0\n            }\n            indicatorData[key][district][date]['detailsInJson']['reason'][reason] += people;\n            \n            if (!indicatorData[key][district][date]['detailsInJson']['needs'][need]) {\n                indicatorData[key][district][date]['detailsInJson']['needs'][need] = 0\n            }\n            indicatorData[key][district][date]['detailsInJson']['needs'][need] += people;\n        }\n    }\n});\n\nmsg.payload = indicatorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 60,
        "wires": [
            [
                "981c16f425f8b159"
            ]
        ]
    },
    {
        "id": "981c16f425f8b159",
        "type": "function",
        "z": "24f0d1ac404f7592",
        "name": "Parse data to ready to be pushed",
        "func": "function sortByValue(obj){\n    var sortedArray = [];\n    for (const [key, value] of Object.entries(obj)) {\n        sortedArray.push([key, value])\n    }\n    sortedArray.sort(function (a, b) {\n        return b[1] - a[1];\n    });\n    \n    const output = {}\n    sortedArray.forEach(el => output[el[0]] = el[1]);\n    return output;\n}\n\nconst pushedData = []\nfor (const [key, values] of Object.entries(msg.payload)) {\n    const indicatorData = []\n    for (const [geom, geomData] of Object.entries(values)) {\n        for (const [date, data] of Object.entries(geomData)) {\n            const sortedJson = sortByValue(data['detailsInJson']['reason']);\n            indicatorData.push({\n                \"geometry_code\": geom,\n                \"date\": date,\n                \"value\": data.value,\n                \"extra_data\": Object.assign(\n                    {}, \n                    sortByValue(data['detailsInJson']['reason']), \n                    sortByValue(data['detailsInJson']['needs'])\n                )\n            })\n        }\n    }\n    pushedData.push({\n        'indicator': key,\n        'data': indicatorData\n    })\n}\nmsg.payload = pushedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 60,
        "wires": [
            [
                "c739a0018c95c5df"
            ]
        ]
    },
    {
        "id": "c739a0018c95c5df",
        "type": "split",
        "z": "24f0d1ac404f7592",
        "name": "Split Data per Indicator",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 260,
        "y": 220,
        "wires": [
            [
                "d7aa4631e1ce9d3d"
            ]
        ]
    },
    {
        "id": "d7aa4631e1ce9d3d",
        "type": "function",
        "z": "24f0d1ac404f7592",
        "name": "Update payload",
        "func": "msg.indicator = msg.payload.indicator;\nmsg.payload = msg.payload.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "5faa312de576473f"
            ]
        ]
    },
    {
        "id": "5faa312de576473f",
        "type": "switch",
        "z": "24f0d1ac404f7592",
        "name": "Switching by Indicator",
        "property": "indicator",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Arrival By Year",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Departure By Year",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Arrival",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Departure",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "71321970b27aba18"
            ],
            [
                "97d70ec0d04cfbd0"
            ],
            [
                "305546156a00c690"
            ],
            [
                "6533405179203524"
            ]
        ]
    },
    {
        "id": "71321970b27aba18",
        "type": "http request",
        "z": "24f0d1ac404f7592",
        "name": "Arrival By Year",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/51/values/batch",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "c972fe957746eb0e"
            ]
        ]
    },
    {
        "id": "97d70ec0d04cfbd0",
        "type": "http request",
        "z": "24f0d1ac404f7592",
        "name": "Departure By Year",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/50/values/batch",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "6386539a6058b63e"
            ]
        ]
    },
    {
        "id": "c972fe957746eb0e",
        "type": "debug",
        "z": "24f0d1ac404f7592",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "6386539a6058b63e",
        "type": "debug",
        "z": "24f0d1ac404f7592",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 200,
        "wires": []
    },
    {
        "id": "305546156a00c690",
        "type": "http request",
        "z": "24f0d1ac404f7592",
        "name": "Arrival",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/49/values/batch",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 990,
        "y": 260,
        "wires": [
            [
                "c01e2fafcfcb330a"
            ]
        ]
    },
    {
        "id": "c01e2fafcfcb330a",
        "type": "debug",
        "z": "24f0d1ac404f7592",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "6533405179203524",
        "type": "http request",
        "z": "24f0d1ac404f7592",
        "name": "Departure",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://staging.rir.kartoza.com/somalia/api/indicator/37/values/batch",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "16e99840057a652b"
            ]
        ]
    },
    {
        "id": "16e99840057a652b",
        "type": "debug",
        "z": "24f0d1ac404f7592",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 320,
        "wires": []
    },
    {
        "id": "72b23a6194149421",
        "type": "inject",
        "z": "c1ed5959cf663dc3",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "3717e5d31b5d4513"
            ]
        ]
    },
    {
        "id": "3717e5d31b5d4513",
        "type": "function",
        "z": "c1ed5959cf663dc3",
        "name": "Payload for all data",
        "func": "// Use this as initiate data\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\"\n}\nmsg.payload = {\n    \"criteria\": \"year_range\",\n    \"start_year\": 2021,\n    \"end_year\": 2022,\n    \"btnExport\": \"Fetch Data\",\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "1b1f69679d8a4c7e"
            ]
        ]
    },
    {
        "id": "1b1f69679d8a4c7e",
        "type": "http request",
        "z": "c1ed5959cf663dc3",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.fsnau.org/ids/exportdata/data.php",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "7187ee8c56216988"
            ]
        ]
    },
    {
        "id": "7187ee8c56216988",
        "type": "function",
        "z": "c1ed5959cf663dc3",
        "name": "Format data",
        "func": "String.prototype.replaceAll = function (search, replacement) {\n    let target = this;\n    return target.replace(new RegExp(search, 'g'), replacement);\n}\n\nfunction getMonthFromString(mon){\n    return (new Date(Date.parse(mon +\" 1, 2012\")).getMonth()+1).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n    })\n}\n\nconst districtMap = {\n    \"adan yabaal\":\"SO2102\",\n    \"afgooye\":\"SO2302\",\n    \"afmadow\":\"SO2802\",\n    \"baardheere\":\"SO2602\",\n    \"badhaadhe\":\"SO2803\",\n    \"baidoa\":\"SO2401\",\n    \"baki\":\"SO1102\",\n    \"balcad\":\"SO2103\",\n    \"banadir\":\"SO2201\",\n    \"bandarbeyla\":\"SO1602\",\n    \"baraawe\":\"SO2303\",\n    \"belet weyne\":\"SO2001\",\n    \"belet xaawo\":\"SO2603\",\n    \"berbera\":\"SO1202\",\n    \"borama\":\"SO1101\",\n    \"bossaso\":\"SO1601\",\n    \"bu'aale\":\"SO2701\",\n    \"bulo burto\":\"SO2002\",\n    \"burco\":\"SO1301\",\n    \"burtinle\":\"SO1702\",\n    \"buuhoodle\":\"SO1302\",\n    \"buur hakaba\":\"SO2402\",\n    \"cabudwaaq\":\"SO1902\",\n    \"cadaado\":\"SO1903\",\n    \"cadale\":\"SO2104\",\n    \"caluula\":\"SO1603\",\n    \"caynabo\":\"SO1402\",\n    \"ceel afweyn\":\"SO1502\",\n    \"ceel barde\":\"SO2502\",\n    \"ceel buur\":\"SO1904\",\n    \"ceel dheer\":\"SO1905\",\n    \"ceel waaq\":\"SO2604\",\n    \"ceerigaabo\":\"SO1501\",\n    \"dhuusamarreeb\":\"SO1901\",\n    \"diinsoor\":\"SO2403\",\n    \"doolow\":\"SO2605\",\n    \"eyl\":\"SO1703\",\n    \"gaalkacyo\":\"SO1801\",\n    \"galdogob\":\"SO1802\",\n    \"garbahaarey\":\"SO2601\",\n    \"garoowe\":\"SO1701\",\n    \"gebiley\":\"SO1203\",\n    \"hargeysa\":\"SO1201\",\n    \"hobyo\":\"SO1803\",\n    \"iskushuban\":\"SO1604\",\n    \"jalalaqsi\":\"SO2003\",\n    \"jamaame\":\"SO2804\",\n    \"jariiban\":\"SO1804\",\n    \"jilib\":\"SO2702\",\n    \"jowhar\":\"SO2101\",\n    \"kismayo\":\"SO2801\",\n    \"kurtunwaarey\":\"SO2304\",\n    \"laas caanood\":\"SO1401\",\n    \"laasqoray\":\"SO1503\",\n    \"lughaye\":\"SO1103\",\n    \"luuq\":\"SO2606\",\n    \"marka\":\"SO2301\",\n    \"owdweyne\":\"SO1303\",\n    \"qandala\":\"SO1605\",\n    \"qansax dheere\":\"SO2404\",\n    \"qardho\":\"SO1606\",\n    \"qoryooley\":\"SO2305\",\n    \"rab dhuure\":\"SO2505\",\n    \"saakow\":\"SO2703\",\n    \"sablaale\":\"SO2306\",\n    \"sheikh\":\"SO1304\",\n    \"taleex\":\"SO1403\",\n    \"tayeeglow\":\"SO2503\",\n    \"waajid\":\"SO2504\",\n    \"wanla weyn\":\"SO2307\",\n    \"xarardheere\":\"SO1805\",\n    \"xudun\":\"SO1404\",\n    \"xudur\":\"SO2501\",\n    \"zeylac\":\"SO1104\",\n}\n\nconst data = [];\nmsg.payload.split('\\n').forEach(row => data.push(row.split(',')));\n\nconst indicatorData = {};\nconst header = data[0];\nconst districtIdx = header.indexOf('District');\nconst marketIdx = header.indexOf('Market');\nconst marketTypeIdx = header.indexOf('\"Market Type\"');\nconst yearIdx = header.indexOf('Year');\nconst monthIdx = header.indexOf('Month');\n\ndata.forEach((row, rowIdx) => {\n    if(rowIdx > 0){\n    \n        if(!row[districtIdx] || !row[marketIdx] || !row[marketTypeIdx] || !row[yearIdx] || ![monthIdx]) {\n            return\n        }\n        const district = districtMap[\n            row[districtIdx].replaceAll('\"','').toLowerCase()\n        ];\n        if(!district) {\n            return\n        }\n        const market = row[marketIdx].replaceAll('\"','');\n        const marketType = row[marketTypeIdx].replaceAll('\"','');\n        const year = row[yearIdx].replaceAll('\"','');\n        const month = row[monthIdx].replaceAll('\"','');\n        const date = year+'-'+getMonthFromString(month)+'-01';\n        \n        row.forEach((elm, idx) => {\n            if(idx > monthIdx){\n                const key = header[idx];\n                if(!elm || elm === '-') {\n                    return\n                }\n                try {\n                    const value = parseFloat(elm);\n                    if(!indicatorData[key]) {\n                        indicatorData[key] = {}\n                    }\n                    if(!indicatorData[key][district]) {\n                        indicatorData[key][district] = {}\n                    }\n                    if(!indicatorData[key][district][date]) {\n                        indicatorData[key][district][date] = {\n                            \"data\" : null,\n                            \"details\": []\n                        }\n                    }\n                    if(!indicatorData[key][district][date]['data'] || marketType === \"Main market\") {\n                        indicatorData[key][district][date]['data'] = {\n                            \"geometry_code\": district,\n                            \"extra_data\": {\n                                \"Market\": market,\n                                \"Market type\": marketType\n                            },\n                            \"date\": date,\n                            \"value\": value\n                        }\n                    }\n                    indicatorData[key][district][date]['details'].push(\n                        {\n                            \"Market\": market,\n                            \"Market type\": marketType,\n                            \"Price\" : value\n                        }\n                    )\n                } catch(err){\n                    return\n                }\n            }\n        })\n    }\n});\n\nmsg.payload = indicatorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 120,
        "wires": [
            [
                "fde98dda29d8d75a"
            ]
        ]
    },
    {
        "id": "ef81e75baa2b69dc",
        "type": "function",
        "z": "c1ed5959cf663dc3",
        "name": "Payload for today",
        "func": "// Use this as initiate data\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\"\n}\nconst today = new Date();\nmsg.payload = {\n    \"criteria\": \"month_year\",\n    \"month\": today.getMonth(),\n    \"year\": today.getFullYear(),\n    \"start_year\": today.getFullYear(),\n    \"end_year\": today.getFullYear(),\n    \"btnExport\": \"Fetch Data\",\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 140,
        "wires": [
            [
                "1b1f69679d8a4c7e"
            ]
        ]
    },
    {
        "id": "fde98dda29d8d75a",
        "type": "function",
        "z": "c1ed5959cf663dc3",
        "name": "Format data per indicator",
        "func": "// we need to change the district name to geocode\nconst pushedData = []\nfor (const [indicator, indicatorValue] of Object.entries(msg.payload)) {\n    const indicatorPayload = []\n    for (const [district, districtValue] of Object.entries(indicatorValue)) {\n        for (const [date, dateData] of Object.entries(districtValue)) {\n            dateData['data']['details'] = dateData['details']\n            indicatorPayload.push(dateData['data'])\n        }\n    }\n    pushedData.push({\n        'indicator': indicator,\n        'data': indicatorPayload\n    })\n}\nmsg.payload = pushedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 120,
        "wires": [
            [
                "ab91777ac0df6b0f"
            ]
        ]
    },
    {
        "id": "ab91777ac0df6b0f",
        "type": "split",
        "z": "c1ed5959cf663dc3",
        "name": "Split Data per Indicator",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "891ee7f9297b6d9a"
            ]
        ]
    },
    {
        "id": "891ee7f9297b6d9a",
        "type": "function",
        "z": "c1ed5959cf663dc3",
        "name": "Update payload",
        "func": "msg.indicator = msg.payload.indicator;\nmsg.payload = msg.payload.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "4cd056deb9c76c9c"
            ]
        ]
    },
    {
        "id": "4cd056deb9c76c9c",
        "type": "switch",
        "z": "c1ed5959cf663dc3",
        "name": "Switching by Indicator",
        "property": "indicator",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "WhiteSorghum1kg",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 240,
        "wires": [
            [
                "2098afae95e3da30"
            ]
        ]
    },
    {
        "id": "2098afae95e3da30",
        "type": "debug",
        "z": "c1ed5959cf663dc3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 240,
        "wires": []
    }
]